version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000" # Dev server (internal)
    environment:
      - NODE_ENV=production
    env_file:
      - ./frontend/.env.production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000" # Dev server (internal)
    environment:
      - NODE_ENV=development
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=mydb
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0.36
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: mydb
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test:
        ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -psecret || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80" # Expose Nginx to host
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  db_data:
